# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - run: false
        id: exit_1

      - run: echo ${{ steps.exit_1.outcome }}
        if: steps.exit_1.outcome == 'failure'

      - uses: docker/build-push-action@v3
        with:
          load: true # <- point 1
          context: .
          push: false
          tags: self-build-ubuntu:latest # <- point: 2
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - run: docker-compose up -d

      - run: echo "VAR=TEST" >> $GITHUB_ENV
      - run: echo ${{ env.VAR }}

      - run: |
          false

      - name: Slack Notification
        uses: slackapi/slack-github-action@v1.23.0
        if: ${{ failure() }}
        with:
          payload: |
            {
              "attachments": [
                {
                  "pretext": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                  "color": "FF0000",
                  "fields": [
                    {
                      "title": "Test result",
                      "short": true,
                      "value": "${{ job.status }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
